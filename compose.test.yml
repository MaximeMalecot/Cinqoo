version: "3.8"

services:
    mongo-db:
        image: "mongo:latest"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=password
            - MONGO_INITDB_DATABASE=payment
            - MONGO_INITDB_DATABASE=order
            - MONGO_INITDB_DATABASE=deliverable
            - MONGO_INITDB_DATABASE=review
            - MONGO_INITDB_DATABASE=favorite
        ports:
            - "27017:27017"
        volumes:
            - "mongo-db:/data/db"

    gateway-service:
        hostname: "${GATEWAY_SERVICE}"
        build:
            context: ./gateway-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./gateway-service:/home/node
        #     - /home/node/node_modules
        env_file: .env
        ports:
            - "3000:3000"

    auth-service:
        hostname: "${AUTH_SERVICE}"
        build:
            context: ./auth-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./auth-service:/home/node
        #     - /home/node/node_modules
        env_file: .env

    stripe-service:
        hostname: "${STRIPE_SERVICE}"
        build:
            context: ./stripe-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./stripe-service:/home/node
        #     - /home/node/node_modules
        env_file: .env

    user-service:
        hostname: "${USER_SERVICE}"
        build:
            context: ./user-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./user-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/user?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    prestation-service:
        hostname: "${PRESTATION_SERVICE}"
        build:
            context: ./prestation-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./prestation-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/prestation?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    review-service:
        hostname: "${REVIEW_SERVICE}"
        build:
            context: ./review-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./review-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/review?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    report-service:
        hostname: "${REPORT_SERVICE}"
        build:
            context: ./report-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./report-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/report?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    payment-service:
        hostname: "${PAYMENT_SERVICE}"
        build:
            context: ./payment-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./payment-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/payment?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    order-service:
        hostname: "${ORDER_SERVICE}"
        build:
            context: ./order-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./order-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/order?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    deliverable-service:
        hostname: "${DELIVERABLE_SERVICE}"
        build:
            context: ./deliverable-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./deliverable-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/deliverable?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    favorite-service:
        hostname: "${FAVORITE_SERVICE}"
        build:
            context: ./favorite-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./favorite-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/favorite?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    mailer-service:
        hostname: "${MAILER_SERVICE}"
        build:
            context: ./mailer-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./mailer-service:/home/node
        #     - /home/node/node_modules
        env_file: .env

    message-service:
        hostname: "${MESSAGE_SERVICE}"
        build:
            context: ./message-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./message-service:/home/node
        #     - /home/node/node_modules
        environment:
            - DATABASE_URL=mongodb://root:password@mongo-db:27017/message?authSource=admin&directConnection=true
        env_file: .env
        depends_on:
            - mongo-db

    hybrid-service:
        hostname: "${HYBRID_SERVICE}"
        build:
            context: ./hybrid-service
            target: dev
        command: npm run start:dev
        # volumes:
        #     - ./hybrid-service:/home/node
        #     - /home/node/node_modules
        env_file: .env
        ports:
            - "3001:3001"

    front:
        build:
            context: ./front
            target: dev
        command: npm run dev
        # volumes:
        #     - ./front:/usr/src/app
        #     - /usr/src/app/node_modules
        env_file: .env
        ports:
            - "8080:8080"

    # pwa:
    #     hostname: "${PWA}"
    #     build:
    #         context: ./pwa
    #         target: dev
    #     command: npm run start
    #     volumes:
    #         - ./pwa:/usr/src/app
    #         - /usr/src/app/node_modules
    #     env_file: .env
    #     ports:
    #         - "8081:8081"

volumes:
    mongo-db:
